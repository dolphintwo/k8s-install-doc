[ip]
10.26.5.97      proxy
10.26.7.84      master
10.26.7.87      registry
10.26.7.86      node1
10.26.7.80      node2
10.26.7.82      node3
10.26.7.81      oracle

[lists]
proxy       ansible_host=10.26.5.97 ansible_port=22
master      ansible_host=10.26.7.84 ansible_port=22
registry    ansible_host=10.26.7.87 ansible_host=22
node1       ansible_host=10.26.7.86 ansible_port=22
node2       ansible_host=10.26.7.80 ansible_port=22
node3       ansible_host=10.26.7.82 ansible_port=22
oracle      ansible_host=10.26.7.81 ansible_port=22

[Store]
proxy		50xfs
master		50xfs	500ext4
registry	50xfs	500ext4		100xfs
node1		50xfs	500ext4
node2		50xfs	500ext4
node3		50xfs	500ext4

fdisk -S 56 /dev/vdb
fdisk -l
mkfs.ext4 /dev/vdb1
echo '/dev/vdb1 /mnt ext4 defaults 0 0' >> /etc/fstab
mount -a

kubectl label nodes 10.26.5.97 PROXY=TRUE
kubectl label nodes 10.26.7.86 FUN=DOCKER
kubectl label nodes 10.26.7.86 BUILD=TRUE
kubectl label nodes 10.26.7.86 SERVICE=TRUE
kubectl label nodes 10.26.7.80 FUN=DOCKER
kubectl label nodes 10.26.7.80 BUILD=TRUE
kubectl label nodes 10.26.7.80 SERVICE=TRUE
kubectl label nodes 10.26.7.82 FUN=DOCKER
kubectl label nodes 10.26.7.82 BUILD=TRUE
kubectl label nodes 10.26.7.82 SERVICE=TRUE
kubectl label nodes 10.26.7.87 CEPH=TRUE
kubectl label nodes 10.26.7.87 REGISTRY=TRUE


删除标签 
kubectl label nodes 10.26.7.86 FUN-
修改标签
kubectl label nodes 10.26.7.86 FUN=AAAAA --overwrite


create /nginx/public {"description":"ONE5测试环境域名代理","domain":"one5.newtouch.com","externalAddress":["183.66.65.220"],"internalAddress":["10.26.5.97"],"name":"public"}

create /nginx/public/k8s {"description":"K8S公网代理","host":"k8s.one5.newtouch.com","http":"true","name":"dashboard","port":"80","realServers":["kubernetes-dashboard.kube-system:80"]}

create /nginx/public/oracle {"description": "ORACLE代理","name": "oracle","port": "31521","realServers": ["10.26.7.81:1521"],"tcp": "true"}

create /nginx/public/zookeeper {"description": "ZK公网代理，勿删！","name": "zookeeper","port": "2181","realServers": ["zookeeper.newtouchone:2181"],"tcp": "true"}

配置kubelet
kubectl config set-cluster kubernetes --certificate-authority=/etc/kubernetes/ssl/ca.pem --embed-certs=true --server=https://172.21.7.11:6443 --kubeconfig=bootstrap.kubeconfig
kubectl config set-credentials kubelet-bootstrap --token=41f7e4ba8b7be874fcff18bf5cf41a7c --kubeconfig=bootstrap.kubeconfig
kubectl config set-context default --cluster=kubernetes --user=kubelet-bootstrap --kubeconfig=bootstrap.kubeconfig
kubectl config use-context default --kubeconfig=bootstrap.kubeconfig
mv bootstrap.kubeconfig /etc/kubernetes/

配置kube-proxy
kubectl config set-cluster kubernetes --certificate-authority=/etc/kubernetes/ssl/ca.pem --embed-certs=true --server=https://172.21.7.11:6443 --kubeconfig=kube-proxy.kubeconfig
kubectl config set-credentials kube-proxy --client-certificate=/etc/kubernetes/ssl/kube-proxy.pem --client-key=/etc/kubernetes/ssl/kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig
kubectl config set-context default --cluster=kubernetes --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig
kubectl config use-context default --kubeconfig=kube-proxy.kubeconfig
mv kube-proxy.kubeconfig /etc/kubernetes/


create /nginx/public {"description":"ONE5开发测试环境域名代理","domain":"one5.newtouch.com","externalAddress":["183.66.65.220"],"internalAddress":["10.26.5.97"],"name":"public"}

create /nginx/public/dashboard {"description":"DASHBOARD公网代理，勿删！","host":"k8s.one5.newtouch.com","http":"true","name":"dashboard","port":"80","realServers":["10.26.5.97:31175"]}

create /nginx/public/rabbitmq {"description":"rabbitmq公网代理，勿删！","host":"rabbitmq.one5.newtouch.com","http":"true","name":"rabbitmq","port":"80","realServers":["183.66.65.220:32157"]}



docker tag schedule-v4.2.6:20171017 172.21.7.11:5000/newtouchone/nboimages-schedule:v4.2.6-171017
docker tag opt-v4.2.6:20171017 172.21.7.11:5000/newtouchone/nboimages-opt:v4.2.6-171017
docker tag api-v4.2.6:20171017 172.21.7.11:5000/newtouchone/nboimages-api:v4.2.6-171017
docker tag admin-v4.2.6:20171017 172.21.7.11:5000/newtouchone/nboimages-admin:v4.2.6-171017
docker rmi schedule-v4.2.6:20171017
docker rmi opt-v4.2.6:20171017
docker rmi api-v4.2.6:20171017
docker rmi admin-v4.2.6:20171017
docker push 172.21.7.11:5000/newtouchone/nboimages-schedule:v4.2.6-171017
docker push 172.21.7.11:5000/newtouchone/nboimages-api:v4.2.6-171017
docker push 172.21.7.11:5000/newtouchone/nboimages-opt:v4.2.6-171017
docker push 172.21.7.11:5000/newtouchone/nboimages-admin:v4.2.6-171017





https://code.newtouch.com/newtouchone/k8s-ansible.git

103.36.173.80   master
103.36.173.215  node1
103.36.173.216  node2


172.28.15.166   master
172.28.15.168   node1
172.28.15.167   node2



[etcdservers]
etcd1 ansible_host=172.28.15.166 ansible_port=22

[kuber_master]
master1 ansible_host=172.28.15.166 ansible_port=22

[kuber_node]
master ansible_host=172.28.15.166 ansible_port=22
node1 ansible_host=172.28.15.168 ansible_port=22
node2 ansible_host=172.28.15.167 ansible_port=22

[kubernetes:children]
kuber_master
kuber_node

[kuber_and_etcd:children]
kubernetes
etcdservers

[registry]
registry1 ansible_host=172.28.15.168 ansible_port=22

[kube_master_and_registry:children]
kuber_master
registry

[kuber_node_and_registry:children]
kuber_node
registry

[kuber_and_etcd_and_registry:children]
kuber_and_etcd
registry

[ceph]
ceph1 ansible_host=172.28.15.167 ansible_port=22

[kuber_and_ceph:children]
kubernetes
ceph

[kuber_and_ceph_and_registry:children]
kuber_and_ceph
registry

[kuber_addition_node]
addon1 ansible_host=172.28.15.166 ansible_port=22 




docker rmi b09e3c1daa97
docker rmi b09e3c1daa97
docker rmi d9d80c0ce15a
docker rmi a25fb02fb7d2
docker rmi f33c2d7cfd60
docker rmi 6b57f2cad3c8
docker rmi 69baa4bf6d36
docker rmi b8f878729caf
docker rmi ecb05c5f6c62



ansible_host
[list]
proxy       ansible_host=172.21.4.3   ansible_port=22
master      ansible_host=172.21.4.6   ansible_port=22
node1       ansible_host=172.21.7.11  ansible_port=22
node2       ansible_host=172.21.7.13  ansible_port=22
node3       ansible_host=172.21.7.14  ansible_port=22
node4       ansible_host=172.21.7.15  ansible_port=22
node5       ansible_host=172.21.7.20  ansible_port=22
node-build1 ansible_host=172.21.1.31  ansible_port=22
node-build2 ansible_host=172.21.1.33  ansible_port=22
registry    ansible_host=172.21.1.35  ansible_port=22
etcd1       ansible_host=172.21.1.30  ansible_port=22
etcd2       ansible_host=172.21.7.12  ansible_port=22
etcd3       ansible_host=172.21.7.16  ansible_port=22
oracle      ansible_host=172.21.4.20  ansible_port=22
ceph        ansible_host=172.21.4.11  ansible_port=22

hosts
172.21.4.3   proxy
172.21.4.6   master
172.21.7.11  node1
172.21.7.13  node2
172.21.7.14  node3
172.21.7.15  node4
172.21.7.20  node5
172.21.1.31  node-build1
172.21.1.33  node-build2
172.21.1.35  registry
172.21.1.30  etcd1
172.21.7.12  etcd2
172.21.7.16  etcd3
172.21.4.11  ceph
172.21.4.20  oracle


免密登录
scp ~/.ssh/id_rsa.pub root@{主机名}:/tmp

cat /tmp/id_rsa.pub >> ~/.ssh/authorized_keys
chmod 600 ~/.ssh/authorized_keys

查看cpu
cat /proc/cpuinfo| grep \"physical id\"| sort| uniq| wc -l
查看内存
cat /proc/meminfo | grep MemTotal
查看磁盘大小
fdisk -l |grep '/dev/'

fdisk -S 56 /dev/vdb
mkfs.ext4 /dev/vdb1
vim /etc/fstab
/dev/vdb1 /mnt ext4 defaults 0 0

/usr/bin/etcdctl \
  --endpoints=http://172.21.1.30:2379,http://172.21.7.12:2379,http://172.21.7.16:2379 \
  set /kubernetes/network/config '{"Network":"'172.30.0.0/16'", "SubnetLen": 24, "Backend": {"Type": "vxlan"}}'


## master
kubectl config set-cluster kubernetes \
  --certificate-authority=/etc/kubernetes/ssl/ca.pem \
  --embed-certs=true \
  --server=https://172.21.4.6:6443

kubectl config set-credentials admin \
  --client-certificate=/etc/kubernetes/ssl/admin.pem \
  --embed-certs=true \
  --client-key=/etc/kubernetes/ssl/admin-key.pem

kubectl config set-context kubernetes \
  --cluster=kubernetes \
  --user=admin

kubectl config use-context kubernetes

/usr/bin/etcdctl \
  --endpoints=ttp://172.21.1.30:2379,http://172.21.7.12:2379,http://172.21.7.16:2379 \
  ls /kubernetes/network/subnets

cat > /etc/docker/daemon.json <<EOF
  {
    "storage-driver":"overlay",
    "graph":"/mnt/docker",
    "registry-mirrors": ["https://docker.mirrors.ustc.edu.cn", "hub-mirror.c.163.com"],
     "insecure-registries" : ["registry.one2.newtouch.com:5000","172.21.1.35:5000"]
  }
EOF


scp 172.21.4.6:/root/.kube/config /root/.kube/config

kubectl config set-cluster kubernetes \
  --certificate-authority=/etc/kubernetes/ssl/ca.pem \
  --embed-certs=true \
  --server=https://172.21.4.6:6443 \
  --kubeconfig=bootstrap.kubeconfig

kubectl config set-credentials kubelet-bootstrap \
  --token=41f7e4ba8b7be874fcff18bf5cf41a7c \
  --kubeconfig=bootstrap.kubeconfig

kubectl config set-context default \
  --cluster=kubernetes \
  --user=kubelet-bootstrap \
  --kubeconfig=bootstrap.kubeconfig

  cat > kubelet.service <<EOF
[Unit]
Description=Kubernetes Kubelet
Documentation=https://github.com/GoogleCloudPlatform/kubernetes
After=docker.service
Requires=docker.service

[Service]
WorkingDirectory=/var/lib/kubelet
ExecStart=/usr/bin/kubelet \\
  --address=172.21.4.3 \\
  --hostname-override=172.21.4.3 \\
  --pod-infra-container-image=10.26.6.1:5000/google_containers/pause-amd64:3.0 \\
  --experimental-bootstrap-kubeconfig=/etc/kubernetes/bootstrap.kubeconfig \\
  --kubeconfig=/etc/kubernetes/kubelet.kubeconfig \\
  --require-kubeconfig \\
  --cert-dir=/etc/kubernetes/ssl \\
  --cluster-dns=10.254.0.2 \\
  --cluster-domain=cluster.local. \\
  --hairpin-mode promiscuous-bridge \\
  --allow-privileged=true \\
  --serialize-image-pulls=false \\
  --logtostderr=true \\
  --v=2
Restart=on-failure
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF


docker run -d -p 5000:5000 --restart=always --name registry \
           -v /root/registry/certs:/certs \
           -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/registry.pem \
           -e REGISTRY_HTTP_TLS_KEY=/certs/registry-key.pem \
           registry:2.6

mkdir -p /etc/docker/certs.d/172.21.1.35:5000
cp /etc/kubernetes/ssl/ca.pem /etc/docker/certs.d/172.21.1.35:5000/ca.crt

cat > kubelet.service <<EOF
[Unit]
Description=Kubernetes Kubelet
Documentation=https://github.com/GoogleCloudPlatform/kubernetes
After=docker.service
Requires=docker.service

[Service]
WorkingDirectory=/var/lib/kubelet
ExecStart=/usr/bin/kubelet \
  --address=10.26.6.2 \
  --hostname-override=10.26.6.2 \
  --pod-infra-container-image=172.21.1.35:5000/newtouchone/pod-infrastructure:latest \
  --experimental-bootstrap-kubeconfig=/etc/kubernetes/bootstrap.kubeconfig \
  --kubeconfig=/etc/kubernetes/kubelet.kubeconfig \
  --require-kubeconfig \
  --cert-dir=/etc/kubernetes/ssl \
  --cluster-dns=10.254.0.2 \
  --cluster-domain=cluster.local. \
  --hairpin-mode promiscuous-bridge \
  --allow-privileged=true \
  --serialize-image-pulls=false \
  --logtostderr=true \
  --v=2
ExecStartPost=/sbin/iptables -A INPUT -s 10.0.0.0/8 -p tcp --dport 4194 -j ACCEPT
ExecStartPost=/sbin/iptables -A INPUT -s 172.16.0.0/12 -p tcp --dport 4194 -j ACCEPT
ExecStartPost=/sbin/iptables -A INPUT -s 192.168.0.0/16 -p tcp --dport 4194 -j ACCEPT
ExecStartPost=/sbin/iptables -A INPUT -p tcp --dport 4194 -j DROP
Restart=on-failure
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF